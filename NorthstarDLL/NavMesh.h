#pragma once
/*
This file has been generated by IDA.
It contains local type definitions from
the type library 'server.dll'
*/
#include "core/math/vector.h"
#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct dtMeshHeader;
struct dtMeshTile;
struct dtPoly;
struct dtBVNode;
struct dtLink;


/* 222 */
struct dtNavMeshParams
{
	float orig[3];
	float tileWidth;
	float tileHeight;
	int maxTiles;
	int maxPolys;
	int disjoint_poly_group_count;
	int reachability_table_size;
	int reachability_table_count;
};

struct dtOffMeshConnection
{
	Vector3 origin;
	Vector3 dest;
	float rad;
	unsigned __int16 poly;
	unsigned __int8 flags;
	unsigned __int8 side;
	unsigned int userId;
	float unk[3];
	float another_unk;
};

/* 224 */
struct dtNavMesh
{
	dtMeshTile **m_posLookup;
	dtMeshTile *m_nextFree;
	dtMeshTile *m_tiles;
	void *disjoint_poly_group;
	int **reachability_table;
	long long qword28;
	dtNavMeshParams m_params;
	float m_orig[3];
	float m_tileWidth;
	float m_tileHight;
	BYTE gap_6C[4];
	int m_maxTiles;
	int m_tileLutSize;
	int m_tileLutMask;
	int m_saltBits;
	int m_tileBits;
	int m_polyBits;
};

/* 225 */
struct dtMeshTile
{
	int salt;
	BYTE gap_4[4];
	dtMeshHeader *header;
	dtPoly *polys;
	void *unk_1;
	Vector3 *verts;
	dtLink *links;
	void *detailMeshes;
	void *detailVerts;
	void *detailTris;
	dtBVNode *bvTree;
	dtOffMeshConnection* offMeshConnections;
	void *data;
	int dataSize;
	int flags;
	dtMeshTile *next;
	long long qword_70;
};

/* 221 */
struct dtMeshHeader
{
	unsigned int magic;
	int version;
	int x;
	int y;
	int layer;
	unsigned int userId;
	int polyCount;
	int sth_per_poly;
	int vertCount;
	int maxLinkCount;
	int detailMeshCount;
	int detailVertCount;
	int detailTriCount;
	int bvNodeCount;
	int offMeshConCount;
	int offMeshBase;
	float walkableHeight;
	float walkableRadius;
	float walkableClimb;
	float bmin[3];
	float bmax[3];
	float bvQuantFactor;
};

/* 227 */
struct dtPoly
{
	unsigned int firstLink;
	unsigned __int16 verts[6];
	unsigned __int16 neis[6];
	unsigned __int16 flags;
	unsigned __int8 vertCount;
	unsigned __int8 areaAndtype;
	unsigned __int16 link_table_idx;
	unsigned __int16 unk;
	float org[3];
};



/* 232 */
struct dtLink
{
	unsigned int ref;
	unsigned int next;
	unsigned __int8 edge;
	unsigned __int8 side;
	unsigned __int8 bmin;
	unsigned __int8 bmax;
	unsigned int flags;
};

/* 231 */
struct dtBVNode
{
	unsigned __int16 bmin[3];
	unsigned __int16 bmax[3];
	int i;
};

