#pragma once
/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'server.dll'
*/

#define __int8 char
#define _BYTE char
#define __int16 short
#define __int32 int
#define __int64 long long

struct CallInfo;

/* 127 */
enum SQObjectType : __int32
{
	_RT_NULL = 0x1,
	_RT_INTEGER = 0x2,
	_RT_FLOAT = 0x4,
	_RT_BOOL = 0x8,
	_RT_STRING = 0x10,
	_RT_TABLE = 0x20,
	_RT_ARRAY = 0x40,
	_RT_USERDATA = 0x80,
	_RT_CLOSURE = 0x100,
	_RT_NATIVECLOSURE = 0x200,
	_RT_GENERATOR = 0x400,
	OT_USERPOINTER = 0x800,
	_RT_USERPOINTER = 0x800,
	_RT_THREAD = 0x1000,
	_RT_FUNCPROTO = 0x2000,
	_RT_CLASS = 0x4000,
	_RT_INSTANCE = 0x8000,
	_RT_WEAKREF = 0x10000,
	OT_VECTOR = 0x40000,
	SQOBJECT_CANBEFALSE = 0x1000000,
	OT_NULL = 0x1000001,
	OT_BOOL = 0x1000008,
	SQOBJECT_DELEGABLE = 0x2000000,
	SQOBJECT_NUMERIC = 0x4000000,
	OT_INTEGER = 0x5000002,
	OT_FLOAT = 0x5000004,
	SQOBJECT_REF_COUNTED = 0x8000000,
	OT_STRING = 0x8000010,
	OT_ARRAY = 0x8000040,
	OT_CLOSURE = 0x8000100,
	OT_NATIVECLOSURE = 0x8000200,
	OT_GENERATOR = 0x8000400,
	OT_THREAD = 0x8001000,
	OT_FUNCPROTO = 0x8002000,
	OT_CLAAS = 0x8004000,
	OT_WEAKREF = 0x8010000,
	OT_TABLE = 0xA000020,
	OT_USERDATA = 0xA000080,
	OT_INSTANCE = 0xA008000,
	OT_ENTITY = 0xA400000,
};

/* 128 */
struct __declspec(align(8)) SQObject
{
	SQObjectType _Type;
	__int64 _VAL;
};

/* 129 */
struct __declspec(align(8)) HSquirrelVM
{
	void* vftable;
	_BYTE gap8[16];
	void* _toString;
	void* _roottable_pointer;
	void* pointer_28;
	CallInfo* ci;
	void* pointer_38;
	__int32 _callstacksize;
	__int32 _stackbase;
	void* pointer_48;
	void* pointer_50;
	void* pointer_58;
	void* pointer_60;
	__int32 _top;
	SQObject* Stackbase;
	SQObject obj_78;
	_BYTE gap88[8];
	SQObject temp_reg;
	_BYTE gapA0[8];
	void* pointer_A8;
	_BYTE gapB0[8];
	SQObject _roottable_object;
	SQObject _lasterror;
	SQObject _errorHandler;
	__int64 field_E8;
	__int32 field_F0;
	_BYTE gapF4[12];
	__int32 _nnativecalls;
	__int32 field_104;
	__int32 _suspended_root;
	_BYTE gap10C[8];
	__int32 field_114;
	__int32 _suspend_varargs;
};

/* 136 */
struct __declspec(align(8)) CallInfo
{
	__int64 ip;
	SQObject* _literals;
	SQObject obj10;
	SQObject obj20;
	__int32 field[4];
	__int32 _root;
	_BYTE _vargs[8];
};

/* 137 */
struct __declspec(align(8)) SQTable
{
	void* vftable;
	__int32 uiRef;
	_BYTE gap_08[4];
	_BYTE gap_10[8];
	void* pointer_18;
	void* pointer_20;
	void* _sharedState;
	_BYTE gap_30[8];
	void* pointer_38;
	__int32 _numOfNodes;
	__int32 field_44;
	__int32 field_48;
	__int32 _usedNodes;
};

/* 138 */
struct __declspec(align(8)) SQString
{
	void* vftable;
	__int32 uiRef;
	_BYTE gap_08[4];
	_BYTE gap_10[8];
	void* sharedState;
	__int32 length;
	__int32 length2;
	_BYTE gap_28[8];
	char string;
};
struct __declspec(align(8)) SQFunctionProto
{
	void* vftable;
	__int32 uiRef;
	_BYTE gap_08[4];
	_BYTE gap_10[8];
	void* pointer_18;
	void* pointer_20;
	void* sharedState;
	void* pointer_30;
	SQObject fileName;
	SQObject funcName;
	SQObject obj_58;
};

struct __declspec(align(8)) SQClosure
{
	void* vftable;
	__int32 uiRef;
	_BYTE gap_08[4];
	void* pointer_10;
	void* pointer_18;
	void* pointer_20;
	void* sharedState;
	SQObject obj_30;
	SQObject funcproto;
	_BYTE gap_50[16];
};
